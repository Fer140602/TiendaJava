/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apptienda;

import Class.Categoria;
import Class.Producto;
import Class.Subcategoria;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anonimo
 */
public class Tienda extends javax.swing.JFrame {    
    Producto producto = new Producto();
    Subcategoria[] subcategorias = new Subcategoria[20];  
    Producto[] productos = new Producto[62];           
    
    /**
     * Creates new form Tienda
     */
    public Tienda() {           
        initComponents();        
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jlIdProducto.setVisible(false);
        jlOferta.setVisible(false);
        jlIdProducto.setText("0");
        
        jbAgregarProducto.setEnabled(false);
        jbQuitarProducto.setEnabled(false);
        jtfCantidad.setEnabled(false);
        
        jtProducto.getColumn(jtProducto.getColumnName(0)).setWidth(40);
        jtProducto.getColumn(jtProducto.getColumnName(0)).setMaxWidth(40);
        jtProducto.getColumn(jtProducto.getColumnName(0)).setMinWidth(40);
                
        jtCarrito.getColumn(jtCarrito.getColumnName(0)).setWidth(40);
        jtCarrito.getColumn(jtCarrito.getColumnName(0)).setMaxWidth(40);
        jtCarrito.getColumn(jtCarrito.getColumnName(0)).setMinWidth(40);              
        
        GetCategoria();
        GetSubcategoria();
        GetProducto();        
    }

    private void GetCategoria(){  
        Categoria categoria = new Categoria();
        Categoria[] categorias = new Categoria[5];
        categorias = categoria.GetCategoria();
        for(int i = 0; i < categorias.length; i++){
            jcbCategoria.addItem(categorias[i].getDescripcion());
        }
    }
    
    private void GetSubcategoria(){
        Subcategoria Subcategoria = new Subcategoria();
        subcategorias = Subcategoria.GetSubcategoria(); 
    }
    
    private void GetProducto(){        
        productos = producto.GetProducto();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbCategoria = new javax.swing.JComboBox<>();
        jcbSubcategoria = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtProducto = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jlProducto = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfCantidad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jbAgregarProducto = new javax.swing.JButton();
        jlIdProducto = new javax.swing.JLabel();
        jlOferta = new javax.swing.JLabel();
        jbQuitarProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCarrito = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jtfTotal = new javax.swing.JTextField();
        jbPedido = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1020, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Carrito.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 340, 390));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BÚSQUEDA DE PRODUCTOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        jLabel3.setText("Categoría");

        jLabel4.setText("Subcategoría");

        jcbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        jcbCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCategoriaItemStateChanged(evt);
            }
        });

        jcbSubcategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona" }));
        jcbSubcategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbSubcategoriaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jcbSubcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jcbSubcategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 660, 80));

        jPanel3.setBackground(new java.awt.Color(255, 204, 0));

        jLabel2.setBackground(new java.awt.Color(255, 204, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("EL FELIZ CAPI");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(710, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1020, 50));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 660, 10));

        jLabel5.setText("0 Productos");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));
        jPanel4.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addContainerGap(632, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 660, 50));

        jtProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Producto", "Precio S/.", "Precio  S/. (Oferta)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtProducto.getTableHeader().setReorderingAllowed(false);
        jtProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtProductoMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtProducto);
        if (jtProducto.getColumnModel().getColumnCount() > 0) {
            jtProducto.getColumnModel().getColumn(0).setResizable(false);
            jtProducto.getColumnModel().getColumn(1).setResizable(false);
            jtProducto.getColumnModel().getColumn(1).setPreferredWidth(0);
            jtProducto.getColumnModel().getColumn(2).setResizable(false);
            jtProducto.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 660, 170));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRODUCTO SELECCIONADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel8.setText("Descripción");

        jtfCantidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel9.setText("Cantidad");

        jbAgregarProducto.setBackground(new java.awt.Color(0, 153, 255));
        jbAgregarProducto.setForeground(new java.awt.Color(255, 255, 255));
        jbAgregarProducto.setText("AGREGAR AL CARRITO");
        jbAgregarProducto.setToolTipText("");
        jbAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarProductoActionPerformed(evt);
            }
        });

        jbQuitarProducto.setBackground(new java.awt.Color(255, 0, 0));
        jbQuitarProducto.setForeground(new java.awt.Color(255, 255, 255));
        jbQuitarProducto.setText("QUITAR DEL CARRITO");
        jbQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(30, 30, 30)
                        .addComponent(jlProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jlOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbQuitarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jtfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAgregarProducto)
                        .addComponent(jbQuitarProducto))
                    .addComponent(jlIdProducto)
                    .addComponent(jlOferta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 660, -1));

        jtCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cantidad", "Producto", "Precio S/.", "Subtotal S/."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCarrito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtCarritoMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtCarrito);
        if (jtCarrito.getColumnModel().getColumnCount() > 0) {
            jtCarrito.getColumnModel().getColumn(0).setResizable(false);
            jtCarrito.getColumnModel().getColumn(1).setResizable(false);
            jtCarrito.getColumnModel().getColumn(2).setResizable(false);
            jtCarrito.getColumnModel().getColumn(3).setResizable(false);
            jtCarrito.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 660, 140));

        jLabel10.setText("TOTAL S/.");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 750, -1, 30));

        jtfTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jtfTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfTotal.setEnabled(false);
        jPanel1.add(jtfTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 750, 170, 30));

        jbPedido.setBackground(new java.awt.Color(0, 153, 0));
        jbPedido.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jbPedido.setForeground(new java.awt.Color(255, 255, 255));
        jbPedido.setText("CARGAR PEDIDO");
        jbPedido.setToolTipText("");
        jbPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPedidoActionPerformed(evt);
            }
        });
        jPanel1.add(jbPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 750, 300, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("CARRITO DE COMPRAS");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, -1, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 660, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1044, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCategoriaItemStateChanged
        // TODO add your handling code here:        
        String categoria = jcbCategoria.getSelectedItem().toString();
        jcbSubcategoria.removeAllItems();
        jcbSubcategoria.addItem("Seleccionar");        
        for(int i = 0; i < subcategorias.length; i++){
            if(subcategorias[i].getCategoria().equals(categoria)){
                jcbSubcategoria.addItem(subcategorias[i].getDescripcion());
            }
        }        
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jlIdProducto.setText("0");
    }//GEN-LAST:event_jcbCategoriaItemStateChanged
  
    private void jcbSubcategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbSubcategoriaItemStateChanged
        // TODO add your handling code here:    
        if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
            String subcategoria = jcbSubcategoria.getSelectedItem().toString();
            int cantidad = 0;     
            double descuento = 0;
            DefaultTableModel model = (DefaultTableModel) jtProducto.getModel();   
            for (int i = 0; i < jtProducto.getRowCount(); i++) {
                model.removeRow(i);
                i-=1;
            }
            if(!subcategoria.equals("Seleccionar")){     
                for(int i = 0; i < subcategorias.length; i++){
                    if(subcategorias[i].getDescripcion().equals(subcategoria)){
                        descuento = subcategorias[i].getDescuento();
                        jLabel6.setText(descuento * 100 + "%");
                        jLabel7.setText("DE DESCUENTO EN TODO " + subcategorias[i].getDescripcion().toUpperCase());
                        jLabel6.setVisible(true);
                        jLabel7.setVisible(true);
                    }
                }
                for(int i = 0; i < productos.length; i++){
                    if(productos[i].getSubcategoria().equals(subcategoria)){
                        cantidad++;                    
                        double oferta = productos[i].getPrecio() - (productos[i].getPrecio() * descuento);                                               
                        model.addRow(new Object[]{
                            productos[i].getIdProducto(),
                            productos[i].getNombre(),
                            productos[i].getPrecio(),
                            oferta
                        });                
                    }
                }                
            } else {
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
            }
            jLabel5.setText(cantidad + " Productos");
            jlIdProducto.setText("0");
        }
    }//GEN-LAST:event_jcbSubcategoriaItemStateChanged

    private void jtProductoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProductoMousePressed
        // TODO add your handling code here:
        jtCarrito.getSelectionModel().clearSelection();
        int fila = jtProducto.getSelectedRow();
        jlIdProducto.setText(jtProducto.getValueAt(fila, 0).toString());
        jlProducto.setText(jtProducto.getValueAt(fila, 1).toString());
        jlOferta.setText(jtProducto.getValueAt(fila, 3).toString());  
        jtfCantidad.setText("");
        jbAgregarProducto.setEnabled(true);
        jbQuitarProducto.setEnabled(false);
        jtfCantidad.setEnabled(true);
    }//GEN-LAST:event_jtProductoMousePressed

    private void jbAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarProductoActionPerformed
        // TODO add your handling code here:
        int IdProducto = Integer.parseInt(jlIdProducto.getText());
        if(IdProducto > 0){
            if(jtfCantidad.getText().length() >=  1 ){            
                DefaultTableModel model = (DefaultTableModel) jtCarrito.getModel();                                
                boolean existe = false;
                int cantidad = 0;
                boolean validNum = producto.validarCantidad(jtfCantidad.getText());
                if (validNum ){
                    cantidad = Integer.parseInt(jtfCantidad.getText());  
                    if(cantidad <= 12){
                        for(int i = 0; i < jtCarrito.getRowCount(); i++){
                            String Addcantidad = "0";
                            if(Integer.parseInt(jtCarrito.getValueAt(i, 0).toString()) == IdProducto){
                                Addcantidad = jtCarrito.getValueAt(i, 1).toString(); 
                                existe = true;  
                            }   
                            if (existe){
                                cantidad += Integer.parseInt(Addcantidad);
                                if(cantidad >= 12){
                                    cantidad = 12;
                                    JOptionPane.showMessageDialog(null, "Sólo puede adquirir hasta 12 unidades de un mismo producto");
                                }
                                model.removeRow(i);
                            }                
                        }             
                        double oferta = Double.parseDouble(jlOferta.getText());                                                   
                        double subtotal = 0;
                        for(int i = 0; i < productos.length; i++){
                            if(productos[i].getIdProducto() == IdProducto){ 
                                subtotal = oferta * cantidad;
                                model.addRow(new Object[]{
                                    productos[i].getIdProducto(),
                                    cantidad,
                                    productos[i].getNombre(),
                                    oferta,
                                    formatearDecimales(subtotal)
                                });    
                            }
                        }            
                        GetTotal(); 
                    } else {                    
                        JOptionPane.showMessageDialog(null, "Sólo puede adquirir hasta 12 unidades de un mismo producto");
                    }
                } else {                    
                    JOptionPane.showMessageDialog(null, "Debe ingresar solo números positivos");
                } 
            } else {
                JOptionPane.showMessageDialog(null,"Ingrese una cantidad");                
            }
        }else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar primero un producto");    
        }
    }//GEN-LAST:event_jbAgregarProductoActionPerformed

    public static Double formatearDecimales(Double numero) {
        return Math.round(numero * 100d) / 100d;
    }
    
    private void jbQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarProductoActionPerformed
        // TODO add your handling code here:
        int IdProducto = Integer.parseInt(jlIdProducto.getText());
        DefaultTableModel model = (DefaultTableModel) jtCarrito.getModel();                                
        for(int i = 0; i < jtCarrito.getRowCount(); i++){
            if(Integer.parseInt(jtCarrito.getValueAt(i, 0).toString()) == IdProducto){
                model.removeRow(i);                
            }               
        }
        GetTotal();
    }//GEN-LAST:event_jbQuitarProductoActionPerformed

    private void jtCarritoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCarritoMousePressed
        // TODO add your handling code here:
        jtProducto.getSelectionModel().clearSelection();        
        int fila = jtCarrito.getSelectedRow();
        jlIdProducto.setText(jtCarrito.getValueAt(fila, 0).toString());
        jlProducto.setText(jtCarrito.getValueAt(fila, 2).toString());
        jlOferta.setText(jtCarrito.getValueAt(fila, 3).toString());  
        jtfCantidad.setText(jtCarrito.getValueAt(fila, 1).toString());
        jbAgregarProducto.setEnabled(false);
        jbQuitarProducto.setEnabled(true);
        jtfCantidad.setEnabled(false);
    }//GEN-LAST:event_jtCarritoMousePressed

    private void jbPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPedidoActionPerformed
        // TODO add your handling code here:        
        if(jtCarrito.getRowCount() > 0){
            CargarPedido CargarPedido = new CargarPedido();
            CargarPedido.setVisible(true);
            String detalle = "Cantidad \t Producto \t \t \t Precio \t Subtotal \n";            
            for(int i = 0; i < jtCarrito.getRowCount(); i++){
                String separador = (jtCarrito.getValueAt(i, 2).toString().length() > 20 ? " \t " : (jtCarrito.getValueAt(i, 2).toString().length() > 10 ? "\t \t " : " \t \t \t "));
                detalle = detalle + jtCarrito.getValueAt(i, 1).toString() + " \t " +  jtCarrito.getValueAt(i, 2).toString() + separador +  jtCarrito.getValueAt(i, 3).toString() + " \t " +  jtCarrito.getValueAt(i, 4).toString() + " \n";
            }
            CargarPedido.jtaDetalle.setText(detalle);
            CargarPedido.jlProductosPedido.setText(jtCarrito.getRowCount() + " Productos");
            CargarPedido.jlTotal.setText(jtfTotal.getText());
            this.setVisible(false);            
        } else {
            JOptionPane.showMessageDialog(null,"No tiene productos en su carrito de compras");   
        }
    }//GEN-LAST:event_jbPedidoActionPerformed

    private void GetTotal(){
        double total = 0;
        for(int i = 0; i < jtCarrito.getRowCount(); i++){
            String subtotal = jtCarrito.getValueAt(i, 4).toString();   
            total += Double.parseDouble(subtotal);
        } 
        jtfTotal.setText(formatearDecimales(total) + "");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tienda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbAgregarProducto;
    private javax.swing.JButton jbPedido;
    private javax.swing.JButton jbQuitarProducto;
    private javax.swing.JComboBox<String> jcbCategoria;
    private javax.swing.JComboBox<String> jcbSubcategoria;
    private javax.swing.JLabel jlIdProducto;
    private javax.swing.JLabel jlOferta;
    private javax.swing.JLabel jlProducto;
    private javax.swing.JTable jtCarrito;
    private javax.swing.JTable jtProducto;
    private javax.swing.JTextField jtfCantidad;
    private javax.swing.JTextField jtfTotal;
    // End of variables declaration//GEN-END:variables
}
